
all: ip-noise-arb.o

INCLUDES = conn.h delayer.h fcs_dm.h iface.h packet_logic.h pqueue.h queue.h rand.h read.h redblack.h rwlock.h switcher.h text_queue_in.h text_queue_out.h verdict.h 

OBJECTS_PROTO = conn.o delayer.o fcs_dm.o ip_queue.o k_stdlib.o main.o packet_logic.o pqueue.o queue.o rand.o redblack.o rwlock.o str2int_dict.o switcher.o text_queue_in.o text_queue_out.o

#CFLAGS = -DUSE_TEXT_QUEUE_IN -DUSE_TEXT_QUEUE_OUT -D__KERNEL__ -DMODULE -DLINUX -I/usr/src/linux/include/ -g -Wall
UML = 0

ifeq ($(UML),1)
	CFLAGS =  -g -Wall -I/home/project/Download/unpack/User-Mode-Linux/kernel/linux/include -I/home/project/Download/unpack/User-Mode-Linux/kernel/linux/arch/um/include -U__i386__ -DMODULE -D__KERNEL__ -DUM_FASTCALL -DNESTING=0 -D__arch_um__ -DSUBARCH="i386" -DUSE_TEXT_QUEUE_IN -DUSE_TEXT_QUEUE_OUT  
else
	CFLAGS = -g -Wall -I/usr/src/linux/include -DMODULE -D__KERNEL__ -DUSE_TEXT_QUEUE_IN -DUSE_TEXT_QUEUE_OUT 
endif

$(OBJECTS_PROTO) :: %.o : %.c $(INCLUDES)
	kgcc $(CFLAGS) -c $<

iface.o: iface.c iface_handlers.c $(INCLUDES)
	kgcc $(CFLAGS) -c iface.c

OBJECTS = $(OBJECTS_PROTO) iface.o

EXTRA_OBJECT = $(OBJECTS) e_log.o

ip-noise-arb.o: $(OBJECTS) e_log.o
	ld -r -o $@ $(OBJECTS) e_log.o

clean:
	rm -f arb $(OBJECTS)
